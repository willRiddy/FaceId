{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"sig",
				"sigmoid〔function〕"
			],
			[
				"fitness",
				"fitness_change"
			],
			[
				"fitn",
				"fitnessA"
			],
			[
				"aver",
				"average"
			],
			[
				"average",
				"average_fitness"
			],
			[
				"fi",
				"fitness"
			],
			[
				"win",
				"winWidth"
			],
			[
				"con",
				"config"
			],
			[
				"confi",
				"config_path"
			],
			[
				"N",
				"NeuralNetwork"
			],
			[
				"ne",
				"neural_network〔variable〕"
			],
			[
				"s",
				"synpatic_weights〔variable〕"
			],
			[
				"traingn",
				"training_inputs〔argument〕"
			],
			[
				"tr",
				"training_outputs"
			],
			[
				"train",
				"training_inputs〔argument〕"
			],
			[
				"tra",
				"training_inputs"
			],
			[
				"sy",
				"synapticWeights〔variable〕"
			],
			[
				"render",
				"render_text"
			],
			[
				"new",
				"newHighScore"
			],
			[
				"highsc",
				"highscoreSystem"
			],
			[
				"hi",
				"highScore"
			],
			[
				"his",
				"highScore"
			],
			[
				"hish",
				"highscoreSystem"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/Python/Python.sublime-build",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"set",
				"Set Syntax: Python3"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"print('Hello World')",
			"help",
			"run",
			"import urllib.request,os,hashlib; h = '6f4c264a24d933ce70df5dedcf1dcaee' + 'ebe013ee18cced0ef93d5f746d80ef60'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/willi/AppData/Local/Temp/kite_tutorial.py",
		"/C/Users/willi/OneDrive/Documents/GitHub/DodgeTheLine-Learning/DodgeTheLine_Learnt.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/pygameTesting.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/Pygame.2.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/MachineLearning/NeuralNetwork.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/MachineLearning/DodgeTheLine.py",
		"/C/Users/willi/OneDrive/Documents/GitHub/DodgeTheLine-Learning/DodgeTheLineLearning.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/MachineLearning/perceptron.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/MachineLearning/DodgeTheLineLearning.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/fibbonacci.py",
		"/C/Users/willi/OneDrive/Documents/GitHub/DodgetheLine/highscore.txt",
		"/C/Users/willi/OneDrive/Documents/GitHub/DodgetheLine/DodgeTheLine.py",
		"/C/Users/willi/OneDrive/Desktop/Software Development/MachineLearning/Config.txt",
		"/C/Users/willi/OneDrive/Desktop/Software Development/simpleNeuralNetwork.py"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"high",
			"')"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "pictureToGray.sublime-project",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
